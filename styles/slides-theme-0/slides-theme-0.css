@import url("../../fonts/noto-serif/noto-serif.css");
@import url("../../fonts/open-sans/open-sans.css");
@import url("../../fonts/hack/hack.css");

:root {
  --of-slides: "/";
  --text-color: rgb(80 90 100);
  --text-color-inverse: rgb(80 90 100);
  --border-color: rgb(215 215 215);
  --border-color-inverse: rgb(222 222 222);
  --border-thickness: 0.075em;
  --heading-color: rgb(70 70 70);
  --heading-color-inverse: rgb(165 165 170);
  --grid-line-color: rgba(0 0 0);
  --grid-line-opacity: .1;

  font-family: "Noto Serif";
  color: var(--text-color);
}

div.slide {
  font-size: 1.4em;
  line-height: 1.2;
  text-align: justify;

  background-image: linear-gradient(to bottom, rgb(243 243 243)   0%,
                                               rgb(255 255 255)  15%,
                                               rgb(255 255 255)  85%,
                                               rgb(243 243 243) 100%);
}

div.slide.inverse {
  color: var(--text-color-inverse);
  background-image: linear-gradient(to bottom, rgb(62 67 72)   0%,
                                               rgb(70 75 80)  15%,
                                               rgb(70 75 80)  85%,
                                               rgb(62 67 72) 100%);
}

div:not(.title):not(.numberless).slide::after {
  content: counter(slide-number) var(--of-slides) var(--n-slides);
}

div.slide::after {
  font-family: "Hack";
  font-size: .75em;
  color: rgb(190 190 190);
  position: absolute;
  bottom: 2.25em;
  right: 3.75em;
  line-height: 1.9;
}

div.slide.inverse::after {
  color: rgb(100 105 110);
}

div.slide.thanks {
  text-align: center;
  align-items: center;
}

h1, h2, h3, header {
  margin: 0px;
  font-family: "Open Sans";
  line-height: 1.2;
  text-align: start;
}

h1 {
  width: 90%;
  /* TODO: For some reason, using `em`/`rem`/`%` for the font-size does not
   * scale the font as expected on resizing the window */
  font-size: 6.0vh;
  text-align: center;
}

h2 {
  font-size: 210%;
}

:not(div.slide.thanks) > h2 {
  top: 7.5%;
}

div.slide.thanks > h2 {
  width: 100%;
  text-align: center;
}

h1, h2 {
  font-weight: 600;
}

h1, h2 {
  color: var(--heading-color);
}

div.inverse h1, div.inverse h2 {
  color: var(--heading-color-inverse);
}

div.author {
  width: 100%;
  font-size: 80%;
  text-align: right;
}

div.row {
  gap: 1em;
}

div.col {
  gap: 1em;
}

.italic {
  font-style: italic;
}

.bold {
  font-weight: bolder;
}

.light {
  font-weight: lighter;
}

.underlined {
  text-decoration: underline;
}

.mono {
  font-family: "Hack";
}

.small {
  font-size: 70%;
}

.weak {
  opacity: .5;
}

.very-weak {
  opacity: .25;
}

.ljust {
  text-align: left;
}

.rjust {
  text-align: right;
}

.debug {
  outline: 1px red dashed;
  background: #ff000022;
}

div.jc-start {
  justify-content: start;
}

div.jc-end {
  justify-content: end;
}

div.jc-center {
  justify-content: center;
}

div.jc-space-around {
  justify-content: space-around;
}

div.jc-space-between {
  justify-content: space-between;
}

div.jc-space-evenly {
  justify-content: space-evenly;
}

div.jc-stretch {
  justify-content: stretch;
}

div.ai-start {
  align-items: start;
}

div.ai-end {
  align-items: end;
}

div.ai-center {
  align-items: center;
}

div.ai-stretch {
  align-items: stretch;
}

div.nogap {
  gap: 0;
}

p {
  padding: 0;
  margin: 0;
}

ul, ol {
  text-align: left;
  padding: 0;
  margin: 0;
  margin-block-start: 0;
  margin-block-end: 0;
  margin-left: 1.5em;
}

ul, menu, dir {
  list-style-type: disc;
}

:is(dir, menu, ol, ul) :is(dir, menu, ul) {
  list-style-type: disc;
}

li::marker {
  color: rgb(190, 190, 190);
  /* font-family: "Hack"; */
}

div.inverse li::marker {
  /*color: rgb(190, 190, 190);*/ /*TODO*/
}

/* ul li::marker { */
/*   content: "\00b7"; /1* "·" *1/ */
/* } */

/* NOTE: This is the `hence` class applied to the whole list. Applying it to a
 * single list item is not straightforward as long as Safari does not fully
 * support the `marker` pseudo-class. */
ul.hence {
  list-style-type: "\2192  ";
}

ul.hence li {
  /* padding-left: 0.25em; */
}

ul.hence li::marker {
  font-family: "Hack";
}

/* li.hence::marker { */
/*   content: "\2192"; /1* "→" *1/ */
/* } */

ol.arabic {
  list-style-type: decimalsonly;
}

ol.loweralpha {
  list-style-type: lettersonly;
}

ol.upperalpha {
  list-style-type: capitalsonly;
}

@counter-style decimalsonly {
  system: numeric;
  symbols: "0" "1" "2" "3" "4" "5" "6" "7" "8" "9";
  prefix: "";
  suffix: "";
}

@counter-style lettersonly {
  system: alphabetic;
  symbols: "a" "b" "c" "d" "e" "f" "g" "h" "i" "j" "k" "l" "m" "n" "o" "p" "q" "r" "s" "t" "u" "v" "w" "x" "y" "z";
  prefix: "";
  suffix: "";
}

@counter-style capitalsonly {
  system: alphabetic;
  symbols: "A" "B" "C" "D" "E" "F" "G" "H" "I" "J" "K" "L" "M" "N" "O" "P" "Q" "R" "S" "T" "U" "V" "W" "X" "Y" "Z";
  prefix: "";
  suffix: "";
}

img.profile-photo, object.img.profile-photo {
  border-radius: 20%;
}

img.framed, object.img.framed {
  border: var(--border-thickness) solid var(--border-color);
  border-radius: 0.5em;
}

div.inverse img.framed, div.inverse object.img.framed {
  border-color: var(--border-color-inverse);
}

table {
  background-color: transparent;
  border-collapse: collapse;
}

table th, table td {
  padding: .4em .5em;
}

table, table th, table td {
  border: solid var(--border-thickness) var(--border-color);
}

div.inverse table, div.inverse table th, div.inverse table td {
  border-color: var(--border-color-inverse);
}

table th {
  font-weight: bold;
}

table tr:nth-of-type(odd) th {
  background-image: linear-gradient(to bottom, rgb(247 247 250)   0%,
                                               rgb(247 247 250)  15%,
                                               rgb(230 230 233)  80%,
                                               rgb(225 225 228) 100%);
}

table tr:nth-of-type(even) th {
  background-image: linear-gradient(to bottom, rgb(255 255 255)   0%,
                                               rgb(255 255 255)  15%,
                                               rgb(245 245 245)  80%,
                                               rgb(235 235 235) 100%);
}

table tr:nth-of-type(odd) td {
  background-image: linear-gradient(to bottom, rgb(242 242 242)   0%,
                                               rgb(255 255 255)  25%,
                                               rgb(255 255 255) 100%);
}

table tr:nth-of-type(even) td {
  background-image: linear-gradient(to bottom, rgb(238 238 241)   0%,
                                               rgb(247 247 250)  25%,
                                               rgb(247 247 250) 100%);
}

.gantt-chart {
  font-size: 100%;
  font-family: "Open Sans";
}

.gantt-chart rect.frame {
  fill: none;
  stroke: var(--border-color);
  stroke-width: var(--border-thickness);
}

.gantt-chart g.group-backgrounds g.past rect {
  opacity: .15;
}

.gantt-chart g.group-backgrounds g.future rect {
  opacity: .075;
}

.gantt-chart g.task rect {
  stroke: var(--border-color);
  stroke-thickness: var(--border-thickness);
  rx: 0.2em;
}

.gantt-chart g.task text {
}

.gantt-chart g.group-names {
  fill: #aaaaaa;
  text-anchor: end;
}

.gantt-chart g.grid line {
  shape-rendering: crispEdges;
}

.gantt-chart g.grid .x-axis line {
  stroke: var(--grid-line-color);
  stroke-opacity: var(--grid-line-opacity);
  stroke-width: 0.1em;
  stroke-dasharray: .5em, .2em;
}

.gantt-chart g.grid .x-axis text {
  font-size: 0.7em;
}

.gantt-chart g.group-separators line {
  stroke: #888888;
  stroke-opacity: 0.2;
}

.gantt-chart g.grid path.domain {
  display: none;
}

